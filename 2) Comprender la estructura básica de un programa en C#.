Comprender la estructura básica de un programa en C#.
En este ejemplo utilizaremos un aplicación de consola. Encontraremos una estructura como la siguiente:



Nombre de la solución: la solución es un contenedor de todo el proyecto, una solución puede tener varios proyectos. La solución recibe el mismo nombre del proyecto por defecto. Este se puede cambiar si se lo desea.

Nombre del proyecto: el proyecto contendrá todos los archivos necesarios (propiedades, referencias, archivos, etc.) para ejecutar la aplicación.

Clase Program.cs: esta clase contiene el metodo main(), el cual se encarga de iniciar nuestra aplicación.

Comprender el código:
Usando Visual Studio, si estamos creando una aplicación de consola (excluyendo .NET 6), automáticamente obtenemos cuatro secciones que se muestran en la siguiente imagen:






Importing Namespaces / importación de espacio de nombres:
Esta sección contiene instrucciones de importación que se utilizan para importar BCL (bibliotecas de clases base), así como espacios de nombres definidos por el usuario si es necesario.  Supongamos que deseamos usar algunas clases e interfaces en nuestro código, entonces deberemos incluir los espacios de nombres desde donde se definen estas clases e interfaces. Por ejemplo, si vamos a usar la clase Console en el código, debemos incluir el espacio de nombres System, ya que la clase Console pertenece al espacio de nombres System.

Sintaxis: using NamespaceName;

Ejemplo: using System;



Si el espacio de nombres que necesitamos es miembro de otro espacio de nombres, tenemos que especificar el espacio de nombres primario y secundario separados por un punto.

Ejemplo:

using System.Data;

using System.IO;



"Un espacio de nombres es un contenedor que contiene un grupo de clases e interfaces relacionadas, así como un espacio de nombres también puede contener otros espacios de nombres."



Namespace declaration / declaración de espacio de nombres:
Aquí se declara un espacio de nombres definido por el usuario. En las aplicaciones .NET, todas las clases e interfaces o cualquier tipo relacionado con el proyecto deben declararse dentro de algún espacio de nombres. En un proyecto, podemos crear varios espacios de nombres.

Sintaxis: namespace NamespaceName {}

Ejemplo: namespace  ConsoleApplication {}



"Generalmente, el nombre del espacio de nombres será el mismo que el nombre del proyecto, pero no es obligatorio, puede dar cualquier nombre definido por el usuario al espacio de nombres."



Class declaration / declaración de clase:
Cuando creamos una aplicación de consola usando Visual Studio, de forma predeterminada, Visual Studio creará un archivo de clase llamado Start-Up con el nombre Program.cs que tendrá una clase con el nombre Program que contiene el método Main. Una clase de inicio no es más que una clase que contiene un método Main() desde el cual se iniciará la ejecución del programa.

Sintaxis:

class ClassName

{

}

Ejemplo:

Class Program

{

}



"Se puede cambiar este comportamiento predeterminado, creando nuestra propia clase y hacer que esta clase sea la clase Start-Up incluyendo el método Main." 

Main method() / método main():
El método main() es el punto de entrada o punto de partida de la aplicación para iniciar su ejecución. Cuando la aplicación comienza a ejecutarse, el método principal será el primer bloque de la aplicación que se ejecutará. El método main() contiene la lógica principal de la aplicación.





